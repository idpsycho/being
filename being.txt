@ blabla
dokazovanie niecoho niekomu
nieco za nieco, kazdy mi nieco da, a nieco za to chce
mozno by som mal robit veci, ktorymi sa chcem chvalit ludom - udrzalo by ma to pri aktivite, a nepustal by som sa do veci ktore nejdu spravit, kedze tymi by som sa nepochvalil
hlboky les, v ktorom neviem co je
musi tam byt nieco, co nebudem vediet co je, aby ma to zaujalo niecim svojskym
akoze sposobom zivota
sposobom pohybu (opatrnost, pokojnost, aktivnost)
sposobom stravy (setrenie, vyberavost)
sposobom interakcie (priatelskost, strach, ignore)
ako zije bakteria?
ide za jedlom
uteka pri iritacii, vracia sa k jedlu
do veci chcem pridavat vselijake featury
chodenie, nutricie+jedenie, utocenie, zivot a zomieranie, potom nejake to riadenie, zacat asi treba od najprvsieho, postupne sa mozu pridavat rozne logicke prvky



@ to do
	@ player looking towards mouse
	player.angle = (mouseScr - g_cam.toScreen(player.pos)).getAngle()
	a potom este nejakym sposobom spravit videnie veci
	ze kazda vec bude v playerovi ulozena kde ju vidi
	a ked sa na nu nebude pozerat, a vec sa presunie, tak on nebude vidiet to presuvanie
	(aj ked sa treba silno zamysliet, ci to pomoze hre, a ci neni prioritnejsie to ai)

	@ simple deer AI
	na zaciatok nejake startovne primitivne AI pre cloveka aj deer

	@ hunger-indicating sprite inside human
	potom vymysliet nejaky sposobom zobrazovania hunger
	ale nie gui, malo by to byt v postave ako zobrazovatelna sucast

	@ AI heading, visibility info
	deer by mohli mat smerovanie, cize nejak naznacit 'oci' (dve cierne bodky)
	a k tomu do AI spravit intersections v tom smere, aby sa do AI dostavala informacia o videnych veciach
	to sa potom moze pouzit aj pri hracovi, ze bude vidiet len to kde je natoceny

@ treba poriesit ten system, ze budem mat
{
	name: 'thing'
	for fuck's sake what's this
	children = ['eyes', 'nutritions']
}
{
	name: 'eyes'
	nejak sem treba dat funkcionalitu, teoreticky cez nejake zakladne eventy nabindovat funkcionalitu
}
	@ co dalsie by sa sem dalo strcit z terajsieho Thing ?
	position, circle, radius - ale v podstate to moze zostat aj hentam, pripadne sa to nepouzije zatial

	chcem ze bude nejaky hollow Thing
	a ten bude aj spritom
	a donho budem potom pchat dalsie objekty ako childy
	a automaticky sa ich grafika tam prida

	cize mam:
	#Thing				name, children, sprite, pos, clr, radius
		#Body			density, body
		#SpringAnchor	anchorBody, joint
		#Movement		tam bude vsetok pohyb

	################################################################
	@ ako to bude fungovat
	thing je nejaky stromovy zaklad, ktory inak nedokaze nic robit
	len je sucastou levela, a moze mat pod sebou dalsie veci

	genThing('circle')
		- toto vytvori objekt, hodi ho do g_arrThings
		- prida donho circle reprezentaciu, init vytvori sprite, hodi ho do ikWorld


	zaklad by malo byt thing, ktore by automaticky bolo aj circle zatial
	otazka teda je uz len ze ako rozsirit circle o Body


	@ -------------------------
	treba cely terajsi Thing rozobrat na casti s roznou funkcionalitou, a potom uz sa uvidi co dalej
	@ -------------------------------

mozno by som to mal spravit tak, ze si poviem co by malo byt odseparovane od zakladu, a odseparujem to vo fungujucom kode do samostatneho celku




@ ========================================================
@ cim zacat
background - green grass
thing - circle, color, name, position, direction, box2d, radius
input - moving locked thing
camera - locking, mouse movement
everything should be encapsulated in kind of modular way for simplicity
tree - static green thing
animal - simple random movement ai, health (later view-angle)
human - hunger, health (somehow show it in gui), inventory
meat - what goes out of animal
rock - lays around on ground, nonphysic, throwable, does damage
things should have their definitions (with universal object generator)
ability to play with as any object
	human - movement, take/drop, throw, eat
	animal - movement, health, survival
	rock - do nothing, but camera follows it, and it may has some stats
